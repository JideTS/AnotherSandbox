{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./button.css?ngResource\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, Input, Output, EventEmitter } from \"@angular/core\";\nexport let ButtonComponent = class ButtonComponent {\n  constructor() {\n    this.label = \"Button\";\n    this.onClick = new EventEmitter();\n    this.onMouseenter = new EventEmitter();\n    this.onMouseleave = new EventEmitter();\n    this.onFocus = new EventEmitter();\n  }\n  get classes() {\n    return [\"sandbox-button\", `sandbox-button--${this.size}`, `sandbox-button--${this.variant}`, `sandbox-button--${this.state}`];\n  }\n  emitClickEvent() {\n    this.onClick.emit('Button clicked');\n  }\n  static #_ = this.propDecorators = {\n    variant: [{\n      type: Input\n    }],\n    state: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onMouseenter: [{\n      type: Output\n    }],\n    onMouseleave: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }]\n  };\n};\nButtonComponent = __decorate([Component({\n  selector: \"sandbox-button\",\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"emitClickEvent()\"\n    (mouseenter)=\"emitMouseenterEvent\"\n    (mouseleave)=\"emitMouseleaveEvent\"\n    (focus)=\"emitFocusEvent\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styles: [__NG_CLI_RESOURCE__0]\n})], ButtonComponent);","map":{"version":3,"names":["__decorate","__NG_CLI_RESOURCE__0","CommonModule","Component","Input","Output","EventEmitter","ButtonComponent","constructor","label","onClick","onMouseenter","onMouseleave","onFocus","classes","size","variant","state","emitClickEvent","emit","_","propDecorators","type","backgroundColor","selector","standalone","imports","template","styles"],"sources":["/Users/pebroc/Projects/AnotherSandbox/src/stories/button.component.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./button.css?ngResource\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, Input, Output, EventEmitter } from \"@angular/core\";\nexport let ButtonComponent = class ButtonComponent {\n    constructor() {\n        this.label = \"Button\";\n        this.onClick = new EventEmitter();\n        this.onMouseenter = new EventEmitter();\n        this.onMouseleave = new EventEmitter();\n        this.onFocus = new EventEmitter();\n    }\n    get classes() {\n        return [\n            \"sandbox-button\",\n            `sandbox-button--${this.size}`,\n            `sandbox-button--${this.variant}`,\n            `sandbox-button--${this.state}`,\n        ];\n    }\n    emitClickEvent() {\n        this.onClick.emit('Button clicked');\n    }\n    static { this.propDecorators = {\n        variant: [{ type: Input }],\n        state: [{ type: Input }],\n        backgroundColor: [{ type: Input }],\n        size: [{ type: Input }],\n        label: [{ type: Input }],\n        onClick: [{ type: Output }],\n        onMouseenter: [{ type: Output }],\n        onMouseleave: [{ type: Output }],\n        onFocus: [{ type: Output }]\n    }; }\n};\nButtonComponent = __decorate([\n    Component({\n        selector: \"sandbox-button\",\n        standalone: true,\n        imports: [CommonModule],\n        template: ` <button\n    type=\"button\"\n    (click)=\"emitClickEvent()\"\n    (mouseenter)=\"emitMouseenterEvent\"\n    (mouseleave)=\"emitMouseleaveEvent\"\n    (focus)=\"emitFocusEvent\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n        styles: [__NG_CLI_RESOURCE__0]\n    })\n], ButtonComponent);\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AACtE,OAAO,IAAIC,eAAe,GAAG,MAAMA,eAAe,CAAC;EAC/CC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,KAAK,GAAG,QAAQ;IACrB,IAAI,CAACC,OAAO,GAAG,IAAIJ,YAAY,CAAC,CAAC;IACjC,IAAI,CAACK,YAAY,GAAG,IAAIL,YAAY,CAAC,CAAC;IACtC,IAAI,CAACM,YAAY,GAAG,IAAIN,YAAY,CAAC,CAAC;IACtC,IAAI,CAACO,OAAO,GAAG,IAAIP,YAAY,CAAC,CAAC;EACrC;EACA,IAAIQ,OAAOA,CAAA,EAAG;IACV,OAAO,CACH,gBAAgB,EACf,mBAAkB,IAAI,CAACC,IAAK,EAAC,EAC7B,mBAAkB,IAAI,CAACC,OAAQ,EAAC,EAChC,mBAAkB,IAAI,CAACC,KAAM,EAAC,CAClC;EACL;EACAC,cAAcA,CAAA,EAAG;IACb,IAAI,CAACR,OAAO,CAACS,IAAI,CAAC,gBAAgB,CAAC;EACvC;EAAC,QAAAC,CAAA,GACQ,IAAI,CAACC,cAAc,GAAG;IAC3BL,OAAO,EAAE,CAAC;MAAEM,IAAI,EAAElB;IAAM,CAAC,CAAC;IAC1Ba,KAAK,EAAE,CAAC;MAAEK,IAAI,EAAElB;IAAM,CAAC,CAAC;IACxBmB,eAAe,EAAE,CAAC;MAAED,IAAI,EAAElB;IAAM,CAAC,CAAC;IAClCW,IAAI,EAAE,CAAC;MAAEO,IAAI,EAAElB;IAAM,CAAC,CAAC;IACvBK,KAAK,EAAE,CAAC;MAAEa,IAAI,EAAElB;IAAM,CAAC,CAAC;IACxBM,OAAO,EAAE,CAAC;MAAEY,IAAI,EAAEjB;IAAO,CAAC,CAAC;IAC3BM,YAAY,EAAE,CAAC;MAAEW,IAAI,EAAEjB;IAAO,CAAC,CAAC;IAChCO,YAAY,EAAE,CAAC;MAAEU,IAAI,EAAEjB;IAAO,CAAC,CAAC;IAChCQ,OAAO,EAAE,CAAC;MAAES,IAAI,EAAEjB;IAAO,CAAC;EAC9B,CAAC;AACL,CAAC;AACDE,eAAe,GAAGP,UAAU,CAAC,CACzBG,SAAS,CAAC;EACNqB,QAAQ,EAAE,gBAAgB;EAC1BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACxB,YAAY,CAAC;EACvByB,QAAQ,EAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;EACJC,MAAM,EAAE,CAAC3B,oBAAoB;AACjC,CAAC,CAAC,CACL,EAAEM,eAAe,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
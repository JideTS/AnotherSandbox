{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./button.css?ngResource\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, Input, Output, EventEmitter } from \"@angular/core\";\nexport let ButtonComponent = class ButtonComponent {\n  constructor() {\n    this.label = \"Button\";\n    this.iconPosition = \"none\";\n    this.onClick = new EventEmitter();\n    this.onMouseenter = new EventEmitter();\n    this.onMouseleave = new EventEmitter();\n    this.onFocus = new EventEmitter();\n  }\n  get classes() {\n    return [\"sandbox-button\", `sandbox-button--${this.size}`, `sandbox-button--${this.style}`, `sandbox-button--${this.state}`];\n  }\n  emitClickEvent() {\n    this.onClick.emit(\"Button clicked\");\n  }\n  emitMouseenterEvent() {\n    this.onMouseenter.emit(\"Mouse enter\");\n  }\n  emitMouseleaveEvent() {\n    this.onMouseleave.emit(\"Mouse leave\");\n  }\n  emitFocusEvent() {\n    this.onFocus.emit(\"Focus\");\n  }\n  static #_ = this.propDecorators = {\n    style: [{\n      type: Input\n    }],\n    state: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    iconUrl: [{\n      type: Input\n    }],\n    iconPosition: [{\n      type: Input\n    }],\n    loadingIconUrl: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onMouseenter: [{\n      type: Output\n    }],\n    onMouseleave: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }]\n  };\n};\nButtonComponent = __decorate([Component({\n  selector: \"sandbox-button\",\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"emitClickEvent()\"\n  (mouseenter)=\"emitMouseenterEvent()\"\n  (mouseleave)=\"emitMouseleaveEvent()\"\n  (focus)=\"emitFocusEvent()\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  <ng-container *ngIf=\"iconPosition === 'left'\">\n    <span *ngIf=\"icon\" class=\"icon left-icon\">{{ icon }}</span>\n    <img *ngIf=\"iconUrl && iconPosition === 'left'\" class=\"icon left-icon\" [src]=\"iconUrl\" alt=\"Icon\" />\n  </ng-container>\n  {{ label }}\n  <ng-container *ngIf=\"iconPosition === 'right'\">\n    <span *ngIf=\"icon\" class=\"icon right-icon\">{{ icon }}</span>\n    <img *ngIf=\"iconUrl && iconPosition === 'right'\" class=\"icon right-icon\" [src]=\"iconUrl\" alt=\"Icon\" />\n  </ng-container>\n\n  <ng-container *ngIf=\"state === 'loading'\">\n  <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:16px\"></i>\n</ng-container>\n\n</button>`,\n  styles: [__NG_CLI_RESOURCE__0]\n})], ButtonComponent);","map":{"version":3,"names":["__decorate","__NG_CLI_RESOURCE__0","CommonModule","Component","Input","Output","EventEmitter","ButtonComponent","constructor","label","iconPosition","onClick","onMouseenter","onMouseleave","onFocus","classes","size","style","state","emitClickEvent","emit","emitMouseenterEvent","emitMouseleaveEvent","emitFocusEvent","_","propDecorators","type","backgroundColor","icon","iconUrl","loadingIconUrl","selector","standalone","imports","template","styles"],"sources":["/Users/pebroc/Projects/AnotherSandbox/src/stories/button.component.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./button.css?ngResource\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, Input, Output, EventEmitter } from \"@angular/core\";\nexport let ButtonComponent = class ButtonComponent {\n    constructor() {\n        this.label = \"Button\";\n        this.iconPosition = \"none\";\n        this.onClick = new EventEmitter();\n        this.onMouseenter = new EventEmitter();\n        this.onMouseleave = new EventEmitter();\n        this.onFocus = new EventEmitter();\n    }\n    get classes() {\n        return [\n            \"sandbox-button\",\n            `sandbox-button--${this.size}`,\n            `sandbox-button--${this.style}`,\n            `sandbox-button--${this.state}`,\n        ];\n    }\n    emitClickEvent() {\n        this.onClick.emit(\"Button clicked\");\n    }\n    emitMouseenterEvent() {\n        this.onMouseenter.emit(\"Mouse enter\");\n    }\n    emitMouseleaveEvent() {\n        this.onMouseleave.emit(\"Mouse leave\");\n    }\n    emitFocusEvent() {\n        this.onFocus.emit(\"Focus\");\n    }\n    static { this.propDecorators = {\n        style: [{ type: Input }],\n        state: [{ type: Input }],\n        backgroundColor: [{ type: Input }],\n        size: [{ type: Input }],\n        label: [{ type: Input }],\n        icon: [{ type: Input }],\n        iconUrl: [{ type: Input }],\n        iconPosition: [{ type: Input }],\n        loadingIconUrl: [{ type: Input }],\n        onClick: [{ type: Output }],\n        onMouseenter: [{ type: Output }],\n        onMouseleave: [{ type: Output }],\n        onFocus: [{ type: Output }]\n    }; }\n};\nButtonComponent = __decorate([\n    Component({\n        selector: \"sandbox-button\",\n        standalone: true,\n        imports: [CommonModule],\n        template: ` <button\n  type=\"button\"\n  (click)=\"emitClickEvent()\"\n  (mouseenter)=\"emitMouseenterEvent()\"\n  (mouseleave)=\"emitMouseleaveEvent()\"\n  (focus)=\"emitFocusEvent()\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  <ng-container *ngIf=\"iconPosition === 'left'\">\n    <span *ngIf=\"icon\" class=\"icon left-icon\">{{ icon }}</span>\n    <img *ngIf=\"iconUrl && iconPosition === 'left'\" class=\"icon left-icon\" [src]=\"iconUrl\" alt=\"Icon\" />\n  </ng-container>\n  {{ label }}\n  <ng-container *ngIf=\"iconPosition === 'right'\">\n    <span *ngIf=\"icon\" class=\"icon right-icon\">{{ icon }}</span>\n    <img *ngIf=\"iconUrl && iconPosition === 'right'\" class=\"icon right-icon\" [src]=\"iconUrl\" alt=\"Icon\" />\n  </ng-container>\n\n  <ng-container *ngIf=\"state === 'loading'\">\n  <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:16px\"></i>\n</ng-container>\n\n</button>`,\n        styles: [__NG_CLI_RESOURCE__0]\n    })\n], ButtonComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}